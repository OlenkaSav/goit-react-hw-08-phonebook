{"version":3,"file":"static/js/513.62e6bbae.chunk.js","mappings":"qRAKMA,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAqDZ,EAlDqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDL,aAAAA,EACAI,SAAAA,IAFME,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAIrBC,GAASC,EAAAA,EAAAA,KAATD,KACAR,EAA0BK,EAA1BL,KAAMC,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SACfQ,EAAWC,EAAAA,GAAqBH,GAChCI,EAAYD,EAAAA,EAAsBH,GAClCK,EAAeF,EAAAA,GAAyBH,GACxCM,EAAaH,EAAAA,GAAuBH,GAC1C,OACE,UAACO,EAAD,CAAOC,OAAO,GAAGb,SAAUI,EAA3B,WACE,UAACU,EAAD,YACE,mBAAOC,QAAQ,GAAf,UAAmBR,EAAnB,SACA,kBACES,MAAOnB,EACPA,KAAK,OACLoB,SAAUd,EACVe,KAAK,OACLC,YAAY,yIACZC,UAAQ,QAGZ,UAACN,EAAD,YACE,mBAAOC,QAAQ,GAAf,UAAmBN,EAAnB,SACA,kBACEO,MAAOlB,EACPD,KAAK,QACLoB,SAAUd,EACVe,KAAK,QACLC,YAAY,kIAGhB,UAACL,EAAD,YACE,mBAAOC,QAAQ,GAAf,UAAmBL,EAAnB,SACA,kBACEM,MAAOjB,EACPF,KAAK,WACLoB,SAAUd,EACVe,KAAK,WACLC,YAAY,iKAIhB,SAACE,EAAD,CAAWH,KAAK,SAAhB,SAA0BP,QAO1BC,EAAQU,EAAAA,GAAAA,KAAH,mOAYLR,EAASQ,EAAAA,GAAAA,IAAH,yCAIND,EAAYC,EAAAA,GAAAA,OAAH,wW,8BC1Cf,EAxBqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,IAAYC,EAAAA,IAAhCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QACVC,GAAUC,EAAAA,EAAAA,KACRzB,GAASC,EAAAA,EAAAA,KAATD,KAMR,GAAIwB,EACF,OAAO,SAAC,KAAD,CAAUE,GAAG,iBAGtB,IAAMC,EAAUxB,EAAAA,GAAoBH,GACpC,OACE,UAAC4B,EAAD,CAASC,UAAU,YAAnB,WACE,SAACC,EAAD,UAASH,KACT,SAAC,EAAD,CAAchC,SAZC,SAAAoC,GACjBb,GAASc,EAAAA,EAAAA,IAAOD,OAYbT,IAAU,cAAGW,MAAO,CAAEC,MAAO,OAAnB,SAA6BX,QAOxCO,EAASb,EAAAA,GAAAA,GAAH,6DAINW,EAAUX,EAAAA,GAAAA,IAAH,8F,gECpBb,IArBgB,SAAC,GAAgC,IAA9B1B,EAA6B,EAA7BA,aAAcI,EAAe,EAAfA,SAC/B,GAA0BwC,EAAAA,EAAAA,WAAS,UAAK5C,IAAxC,eAAOM,EAAP,KAAcuC,EAAd,KAiBA,MAAO,CAAEvC,MAAAA,EAAOuC,SAAAA,EAAUtC,aAfL,SAAC,GAAgB,IAAduC,EAAa,EAAbA,OACd7C,EAAgB6C,EAAhB7C,KACF8C,EADkBD,EAAV1B,MAEdyB,GAAS,SAAAG,GAAS,yBACbA,GADa,cAEf/C,EAAO8C,QAU4BvC,aANnB,SAAAyC,GACnBA,EAAEC,iBACF9C,GAAS,UAAKE,IACduC,GAAS,UAAK7C","sources":["components/RegisterForm/RegisterForm.jsx","components/pages/RegisterPage.jsx","hooks/useForm.js"],"sourcesContent":["import useForm from '../../hooks/useForm';\nimport styled from 'styled-components';\nimport useLang from '../../hooks/useLang';\nimport contentText from '../../Lang/contentText.json';\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { lang } = useLang();\n  const { name, email, password } = state;\n  const userName = contentText.userName[lang];\n  const userEmail = contentText.userEmail[lang];\n  const userPassword = contentText.userPassword[lang];\n  const registrBtn = contentText.registrBtn[lang];\n  return (\n    <SForm action=\"\" onSubmit={handleSubmit}>\n      <SField>\n        <label htmlFor=\"\">{userName}: </label>\n        <input\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          type=\"text\"\n          placeholder=\"Введите имя пользователя\"\n          required\n        />\n      </SField>\n      <SField>\n        <label htmlFor=\"\">{userEmail}: </label>\n        <input\n          value={email}\n          name=\"email\"\n          onChange={handleChange}\n          type=\"email\"\n          placeholder=\"Введите email пользователя\"\n        />\n      </SField>\n      <SField>\n        <label htmlFor=\"\">{userPassword}: </label>\n        <input\n          value={password}\n          name=\"password\"\n          onChange={handleChange}\n          type=\"password\"\n          placeholder=\"Введите пароль пользователя\"\n        />\n      </SField>\n\n      <StyledBtn type=\"submit\">{registrBtn}</StyledBtn>\n    </SForm>\n  );\n};\n\nexport default RegisterForm;\n\nconst SForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  /* align-items: center; */\n  justify-content: center;\n  width: 600px;\n  height: 100%;\n  padding: 20px;\n  border: solid black 1px;\n  font-size: 25px;\n`;\n\nconst SField = styled.div`\n  margin: 10px;\n`;\n\nconst StyledBtn = styled.button`\n  margin: auto;\n  margin-left: auto;\n  font-family: inherit;\n  font-size: 25px;\n\n  color: #210672;\n  width: 150px;\n  height: 40px;\n  cursor: pointer;\n\n  background-color: #4db0ea;\n  border-radius: 10px;\n  -moz-box-shadow: 6px 8px 4px #333333;\n  -webkit-box-shadow: 6px 8px 4px #333333;\n  box-shadow: 6px 8px 4px #333333;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport RegisterForm from '../RegisterForm/RegisterForm';\n\nimport { signup } from '../../redux/auth/authOperations';\n\nimport { getAuthError } from '../../redux/selectors';\nimport useAuth from 'hooks/useAuth';\nimport styled from 'styled-components';\nimport useLang from '../../hooks/useLang';\nimport contentText from '../../Lang/contentText.json';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const { status, message } = useSelector(getAuthError);\n  const isLogin = useAuth();\n  const { lang } = useLang();\n\n  const onRegister = data => {\n    dispatch(signup(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/my-contacts\" />;\n  }\n\n  const regPage = contentText.regPage[lang];\n  return (\n    <Wrapper className=\"container\">\n      <STitle>{regPage}</STitle>\n      <RegisterForm onSubmit={onRegister} />\n      {status && <p style={{ color: 'red' }}>{message}</p>}\n    </Wrapper>\n  );\n};\n\nexport default RegisterPage;\n\nconst STitle = styled.h2`\n  margin: 20px;\n  font-size: 35px;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    const newValue = value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["initialState","name","email","password","onSubmit","useForm","state","handleChange","handleSubmit","lang","useLang","userName","contentText","userEmail","userPassword","registrBtn","SForm","action","SField","htmlFor","value","onChange","type","placeholder","required","StyledBtn","styled","dispatch","useDispatch","useSelector","getAuthError","status","message","isLogin","useAuth","to","regPage","Wrapper","className","STitle","data","signup","style","color","useState","setState","target","newValue","prevState","e","preventDefault"],"sourceRoot":""}
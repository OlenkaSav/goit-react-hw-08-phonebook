{"version":3,"file":"static/js/670.395c1be4.chunk.js","mappings":"mOAEMA,EAAe,CACnBC,MAAO,GACPC,SAAU,IAmDZ,EAhDqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDJ,aAAAA,EACAG,SAAAA,IAFME,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAKrBN,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SAEf,OACE,kBAAMM,OAAO,GAAGL,SAAUI,EAA1B,WAYE,4BACE,kBAAOE,QAAQ,GAAf,8FACA,kBACEC,MAAOT,EACPU,KAAK,QACLC,SAAUN,EACVO,KAAK,QACLC,YAAY,kIAGhB,4BACE,kBAAOL,QAAQ,GAAf,6HACA,kBACEC,MAAOR,EACPS,KAAK,WACLC,SAAUN,EACVO,KAAK,WACLC,YAAY,iKAGhB,0BACE,mBAAQD,KAAK,SAAb,kD,oBClBR,EAtBkB,WAChB,IAAME,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,IAAYC,EAAAA,IAAhCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAOhB,OANgBH,EAAAA,EAAAA,IAAYI,EAAAA,KAOnB,SAAC,KAAD,CAAUC,GAAG,kBAIpB,iBAAKC,UAAU,YAAf,WACE,wCACA,SAACC,EAAD,CAAWrB,SAXC,SAAAsB,GACdV,GAASW,EAAAA,EAAAA,GAAMD,OAWZN,IAAU,cAAGQ,MAAO,CAAEC,MAAO,OAAnB,SAA6BR,S,gECH9C,IArBgB,SAAC,GAAgC,IAA9BpB,EAA6B,EAA7BA,aAAcG,EAAe,EAAfA,SAC/B,GAA0B0B,EAAAA,EAAAA,WAAS,UAAK7B,IAAxC,eAAOK,EAAP,KAAcyB,EAAd,KAiBA,MAAO,CAAEzB,MAAAA,EAAOyB,SAAAA,EAAUxB,aAfL,SAAC,GAAgB,IAAdyB,EAAa,EAAbA,OACdpB,EAAgBoB,EAAhBpB,KACFqB,EADkBD,EAAVrB,MAEdoB,GAAS,SAAAG,GAAS,yBACbA,GADa,cAEftB,EAAOqB,QAU4BzB,aANnB,SAAA2B,GACnBA,EAAEC,iBACFhC,GAAS,UAAKE,IACdyB,GAAS,UAAK9B,Q,sJCjBX,IAAMoC,EAAY,SAAC,GAAD,SAAGC,QAEfC,EAAkB,SAAC,GAA0B,IAAxBD,EAAuB,EAAvBA,OAAQE,EAAe,EAAfA,SACxC,IAAKF,EACH,OAAOE,EAASC,MAElB,IAAMC,EAAmBJ,EAAOK,cAChC,OAAOH,EAASC,MAAMH,QAAO,SAAAM,GAAO,OAClCA,EAAQhC,KAAK+B,cAAcE,SAASH,OAI3BI,EAAkB,SAAC,GAAD,SAAGN,SAAwBO,SAE7C5B,EAAe,SAAC,GAAD,SAAG6B,KAAgBC,OAAS,IAC3C3B,EAAS,SAAC,GAAD,SAAG0B,KAAgBE","sources":["components/LoginForm/LoginForm.jsx","components/pages/LoginPage.jsx","hooks/useForm.js","redux/selectors.js"],"sourcesContent":["import useForm from '../../hooks/useForm';\n\nconst initialState = {\n  email: '',\n  password: '',\n};\n\nconst RegisterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { email, password } = state;\n\n  return (\n    <form action=\"\" onSubmit={handleSubmit}>\n      {/* <div>\n        <label htmlFor=\"\">Имя пользователя:</label>\n        <input\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          type=\"text\"\n          placeholder=\"Введите имя пользователя\"\n          required\n        />\n      </div> */}\n      <div>\n        <label htmlFor=\"\">Email пользователя:</label>\n        <input\n          value={email}\n          name=\"email\"\n          onChange={handleChange}\n          type=\"email\"\n          placeholder=\"Введите email пользователя\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"\">Пароль пользователя:</label>\n        <input\n          value={password}\n          name=\"password\"\n          onChange={handleChange}\n          type=\"password\"\n          placeholder=\"Введите пароль пользователя\"\n        />\n      </div>\n      <div>\n        <button type=\"submit\">Логин</button>\n      </div>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport LoginForm from '../../components/LoginForm/LoginForm';\n\nimport { login } from '../../redux/auth/authOperations';\n\nimport { getAuthError, isAuth } from '../../redux/selectors';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const { status, message } = useSelector(getAuthError);\n  const isLogin = useSelector(isAuth);\n\n  const onLogin = data => {\n    dispatch(login(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/my-contacts\" />;\n  }\n\n  return (\n    <div className=\"container\">\n      <h2>Login Page</h2>\n      <LoginForm onSubmit={onLogin} />\n      {status && <p style={{ color: 'red' }}>{message}</p>}\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    const newValue = value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","export const getFilter = ({ filter }) => filter;\n\nexport const visibleContacts = ({ filter, contacts }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nexport const getLoaderStatus = ({ contacts }) => contacts.loading;\n\nexport const getAuthError = ({ auth }) => auth.error || {};\nexport const isAuth = ({ auth }) => auth.isLogin;\n"],"names":["initialState","email","password","onSubmit","useForm","state","handleChange","handleSubmit","action","htmlFor","value","name","onChange","type","placeholder","dispatch","useDispatch","useSelector","getAuthError","status","message","isAuth","to","className","LoginForm","data","login","style","color","useState","setState","target","newValue","prevState","e","preventDefault","getFilter","filter","visibleContacts","contacts","items","normalizedFilter","toLowerCase","contact","includes","getLoaderStatus","loading","auth","error","isLogin"],"sourceRoot":""}
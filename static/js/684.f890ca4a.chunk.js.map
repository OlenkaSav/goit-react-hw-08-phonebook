{"version":3,"file":"static/js/684.f890ca4a.chunk.js","mappings":"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","sources":["components/Form/Form.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Loader/Loader.jsx","components/pages/MyContactsPage.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { langContext } from '../../Lang/LangContext';\nimport contentText from '../../Lang/contentText.json';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nfunction Form({ contacts, onSubmit }) {\n  const { lang } = useContext(langContext);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const marker = e.currentTarget.name;\n    switch (marker) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n  const notification1 = contentText.notification1[lang];\n  const notification2 = contentText.notification2[lang];\n  const notification3 = contentText.notification3[lang];\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.find(contact => contact.name === name)) {\n      Report.warning(notification1, `${name}` + notification2, notification3);\n      return;\n    }\n\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const nameContact = contentText.name[lang];\n  const numberContact = contentText.number[lang];\n  const addBtn = contentText.addBtn[lang];\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledLable>\n        {nameContact}\n        <StyledInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </StyledLable>\n      <StyledLable>\n        {numberContact}\n        <StyledInput\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </StyledLable>\n      <StyledBtn type=\"submit\" disabled={!name || !number}>\n        {addBtn}\n      </StyledBtn>\n    </StyledForm>\n  );\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst StyledForm = styled.form`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 10px 0;\n`;\n\nconst StyledLable = styled.label`\n  display: flex;\n  align-items: center;\n  margin: 10px 0px;\n  font-size: 30px;\n  color: #210672;\n `;\n\nconst StyledInput = styled.input`\n  width: 180px;\n  height: 30px;\n  border-radius: 10px;\n  margin-left: 10px;\n  padding-left: 10px;\n  -moz-box-shadow: 3px 4px 2px #333333;\n  -webkit-box-shadow: 3px 4px 2px #333333;\n  box-shadow: 3px 4px 2px #333333;\n  font-size: 20px;\n`;\n\nconst StyledBtn = styled.button`\n  font-family: inherit;\n  font-size: 25px;\n  color: ${props => (props.disabled ? `#7c7a7a` : ` #210672`)};\n  width: 150px;\n  height: 50px;\n  background-color: ${props => (props.disabled ? `#afaaaa` : `#4db0ea`)};\n  border-radius: 10px;\n  -moz-box-shadow: 6px 8px 4px #333333;\n  -webkit-box-shadow: 6px 8px 4px #333333;\n  box-shadow: ${props =>\n    props.disabled\n      ? `0px 0px 4px #333333`\n      : `3px 4px 2px\n    #333333`};\n`;\nexport default Form;\n","import React from 'react';\nimport useLang from 'hooks/useLang';\nimport contentText from '../../Lang/contentText.json';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { AiOutlinePhone } from 'react-icons/ai';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  const { lang } = useLang();\n  const deleteBtn = contentText.delBtn[lang];\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <StyledList key={id}>\n          <Span>\n            <AiOutlinePhone color={`black`} size={30} />\n          </Span>\n          <p>\n            {name}: {number}\n          </p>\n          <StyledBtn type=\"button\" onClick={() => onDeleteContact(id)}>\n            {deleteBtn}\n          </StyledBtn>\n        </StyledList>\n      ))}\n    </ul>\n  );\n};\n\nconst StyledList = styled.li`\n  display: flex;\n  align-items: center;\n  border: dashed;\n  margin-bottom: 10px;\n  padding: 5px;\n  font-size: 25px;\n  color: #210672;\n`;\nconst Span = styled.span`\n  margin-right: 10px;\n`;\n\nconst StyledBtn = styled.button`\n  margin-left: auto;\n  font-family: inherit;\n  font-size: 25px;\n\n  color: #210672;\n  width: 150px;\n  height: 40px;\n\n  background-color: #4db0ea;\n  border-radius: 10px;\n  -moz-box-shadow: 3px 4px 2px #333333;\n  -webkit-box-shadow: 3px 4px 2px #333333;\n  box-shadow: 3px 4px 2px #333333;\n`;\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      id: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport useLang from 'hooks/useLang';\nimport contentText from '../../Lang/contentText.json';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Filter = ({ value, onChange }) => {\n  const { lang } = useLang();\n  const filterLable = contentText.filter[lang];\n  return (\n    <StyledLable>\n      {filterLable}\n      <StyledInput\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </StyledLable>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst StyledLable = styled.label`\n  display: flex;\n  align-items: center;\n  margin: 10px 0px;\n  font-size: 30px;\n  color: #210672;\n`;\n\nconst StyledInput = styled.input`\n  width: 180px;\n  height: 30px;\n  border-radius: 10px;\n  margin-left: 10px;\n  padding-left: 10px;\n  -moz-box-shadow: 3px 4px 2px #333333;\n  -webkit-box-shadow: 3px 4px 2px #333333;\n  box-shadow: 3px 4px 2px #333333;\n  font-size: 20px;\n`;\nexport default Filter;\n","import React from 'react';\nimport { Comment } from 'react-loader-spinner';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nexport function Loader() {\n  return (\n    <Wrapper>\n      <Comment\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"comment-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"comment-wrapper\"\n        color=\"#fff\"\n        backgroundColor=\"#4db0ea\"\n      />\n      ;\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nLoader.propTypes = {\n  query: PropTypes.string,\n};\n","import { memo, useEffect } from 'react';\nimport Form from '../Form/Form';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport useLang from '../../hooks/useLang';\nimport contentText from '../../Lang/contentText';\nimport styled from 'styled-components';\nimport { Loader } from '../../components/Loader/Loader';\nimport { useSelector, useDispatch } from 'react-redux/es/exports';\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n} from '../../redux/contacts/operationsContacts';\nimport { filterContact } from '../../redux/filter/sliceFilter';\nimport {\n  getFilter,\n  visibleContacts,\n  getLoaderStatus,\n} from '../../redux/selectors';\n\nfunction MyContacts() {\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(visibleContacts);\n  const isLoaderActive = useSelector(getLoaderStatus);\n\n  const dispatch = useDispatch();\n  const { lang } = useLang();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onAddContact = (name, number) => {\n    const payload = { name, number };\n    const action = addContact(payload);\n    dispatch(action);\n  };\n\n  const onDeleteContact = payload => {\n    dispatch(deleteContact(payload));\n  };\n\n  const onChangeFilter = e => {\n    dispatch(filterContact(e.currentTarget.value));\n  };\n\n  const title = contentText.title[lang];\n  const contactsList = contentText.contacts[lang];\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      <Form onSubmit={onAddContact} contacts={contacts} />\n      <Title>{contactsList}</Title>\n      <Filter value={filter} onChange={onChangeFilter} />\n      {isLoaderActive && <Loader />}\n      <ContactList contacts={contacts} onDeleteContact={onDeleteContact} />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  border: 1px solid black;\n  width: 800px;\n  margin: 20px auto;\n  padding: 20px;\n  background-color: #3df4d5;\n  border-radius: 20px;\n  -moz-box-shadow: 10px 10px 25px #333333;\n  -webkit-box-shadow: 10px 10px 25px #333333;\n  box-shadow: 10px 10px 25px #333333;\n`;\n\nconst Title = styled.h2`\n  font-size: 40px;\n  color: #210672;\n`;\n\nexport default memo(MyContacts);\n"],"names":["StyledForm","styled","StyledLable","StyledInput","StyledBtn","props","disabled","contacts","onSubmit","lang","useContext","langContext","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","notification1","contentText","notification2","notification3","reset","nameContact","numberContact","addBtn","preventDefault","find","contact","Report","type","onChange","pattern","title","required","StyledList","Span","onDeleteContact","useLang","deleteBtn","map","id","color","size","onClick","filterLable","Loader","Wrapper","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","backgroundColor","MyContacts","filter","useSelector","getFilter","visibleContacts","isLoaderActive","getLoaderStatus","dispatch","useDispatch","useEffect","fetchContacts","contactsList","Title","payload","action","addContact","filterContact","deleteContact","memo"],"sourceRoot":""}
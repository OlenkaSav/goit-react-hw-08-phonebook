{"version":3,"file":"static/js/513.e859131a.chunk.js","mappings":"oOAEMA,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAmDZ,EAhDqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDL,aAAAA,EACAI,SAAAA,IAFME,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAKrBP,EAA0BK,EAA1BL,KAAMC,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SAErB,OACE,kBAAMM,OAAO,GAAGL,SAAUI,EAA1B,WACE,4BACE,kBAAOE,QAAQ,GAAf,2GACA,kBACEC,MAAOV,EACPA,KAAK,OACLW,SAAUL,EACVM,KAAK,OACLC,YAAY,yIACZC,UAAQ,QAGZ,4BACE,kBAAOL,QAAQ,GAAf,8FACA,kBACEC,MAAOT,EACPD,KAAK,QACLW,SAAUL,EACVM,KAAK,QACLC,YAAY,kIAGhB,4BACE,kBAAOJ,QAAQ,GAAf,6HACA,kBACEC,MAAOR,EACPF,KAAK,WACLW,SAAUL,EACVM,KAAK,WACLC,YAAY,iKAGhB,0BACE,mBAAQD,KAAK,SAAb,sF,8BClBR,EAtBqB,WACnB,IAAMG,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,IAAYC,EAAAA,IAAhCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAOhB,OANgBC,EAAAA,EAAAA,MAOP,SAAC,KAAD,CAAUC,GAAG,kBAIpB,iBAAKC,UAAU,YAAf,WACE,2CACA,SAAC,EAAD,CAAcpB,SAXC,SAAAqB,GACjBT,GAASU,EAAAA,EAAAA,GAAOD,OAWbL,IAAU,cAAGO,MAAO,CAAEC,MAAO,OAAnB,SAA6BP,S,gECJ9C,IArBgB,SAAC,GAAgC,IAA9BrB,EAA6B,EAA7BA,aAAcI,EAAe,EAAfA,SAC/B,GAA0ByB,EAAAA,EAAAA,WAAS,UAAK7B,IAAxC,eAAOM,EAAP,KAAcwB,EAAd,KAiBA,MAAO,CAAExB,MAAAA,EAAOwB,SAAAA,EAAUvB,aAfL,SAAC,GAAgB,IAAdwB,EAAa,EAAbA,OACd9B,EAAgB8B,EAAhB9B,KACF+B,EADkBD,EAAVpB,MAEdmB,GAAS,SAAAG,GAAS,yBACbA,GADa,cAEfhC,EAAO+B,QAU4BxB,aANnB,SAAA0B,GACnBA,EAAEC,iBACF/B,GAAS,UAAKE,IACdwB,GAAS,UAAK9B","sources":["components/RegisterForm/RegisterForm.jsx","components/pages/RegisterPage.jsx","hooks/useForm.js"],"sourcesContent":["import useForm from '../../hooks/useForm';\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { name, email, password } = state;\n\n  return (\n    <form action=\"\" onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"\">Имя пользователя:</label>\n        <input\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          type=\"text\"\n          placeholder=\"Введите имя пользователя\"\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor=\"\">Email пользователя:</label>\n        <input\n          value={email}\n          name=\"email\"\n          onChange={handleChange}\n          type=\"email\"\n          placeholder=\"Введите email пользователя\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"\">Пароль пользователя:</label>\n        <input\n          value={password}\n          name=\"password\"\n          onChange={handleChange}\n          type=\"password\"\n          placeholder=\"Введите пароль пользователя\"\n        />\n      </div>\n      <div>\n        <button type=\"submit\">Регистрация</button>\n      </div>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport RegisterForm from '../RegisterForm/RegisterForm';\n\nimport { signup } from '../../redux/auth/authOperations';\n\nimport { getAuthError } from '../../redux/selectors';\nimport useAuth from 'hooks/useAuth';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const { status, message } = useSelector(getAuthError);\n  const isLogin = useAuth();\n\n  const onRegister = data => {\n    dispatch(signup(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/my-contacts\" />;\n  }\n\n  return (\n    <div className=\"container\">\n      <h2>Register Page</h2>\n      <RegisterForm onSubmit={onRegister} />\n      {status && <p style={{ color: 'red' }}>{message}</p>}\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    const newValue = value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["initialState","name","email","password","onSubmit","useForm","state","handleChange","handleSubmit","action","htmlFor","value","onChange","type","placeholder","required","dispatch","useDispatch","useSelector","getAuthError","status","message","useAuth","to","className","data","signup","style","color","useState","setState","target","newValue","prevState","e","preventDefault"],"sourceRoot":""}